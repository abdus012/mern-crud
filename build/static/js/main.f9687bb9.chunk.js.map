{"version":3,"sources":["components/setErrors.js","components/CreatePost.js","components/DetailPage.js","components/EditPost.js","components/Header.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["setErrors","title","description","category","errors","CreatePost","props","handleInputChange","e","target","name","value","setState","state","validate","Object","values","every","err","onSubmit","preventDefault","data","postCategory","console","log","Axios","post","then","res","success","alert","className","noValidate","type","placeholder","this","onChange","editor","ClassicEditor","onInit","event","getData","onClick","Component","DetailPage","id","match","params","axios","get","dangerouslySetInnerHTML","__html","EditPost","put","Header","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","LandingPage","handleTextSearch","searchTerm","currentTarget","filterContent","posts","onDelete","delete","getPosts","result","filter","toLowerCase","includes","scope","map","index","_id","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9687bb9.chunk.js","sourcesContent":["export const setErrors = (title, description, category)=>{\n    let errors = {};\n    errors.title= title? \"\":\"Title Required\";\n    errors.description= description? \"\":\"Title Required\";\n    errors.category= category? \"\":\"Title Required\";\nreturn errors;\n};","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { setErrors } from './setErrors';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nclass CreatePost extends Component {\n    constructor(props){\n        super(props);\n            this.state = {\n            title: \"\",\n            description: \"\",\n            category: \"\",\n            errors:{},\n            };\n        \n    }\n    handleInputChange=(e)=>{\n        const {name, value}= e.target;\n        this.setState({\n            ...this.state,\n            [name]:value,\n        });\n    };\n    validate=(title,description, category)=>{\n        const errors = setErrors(title,description, category);\n        this.setState({errors:errors});\n        return Object.values(errors).every((err)=>err === \"\");\n    }\n    onSubmit=(e)=>{\n        e.preventDefault();\n        const {title, description, category} = this.state;\n        if(this.validate(title, description, category)){\n\n        const data = {\n            title:title,\n            description:description,\n            postCategory:category,\n        }\n        console.log(data);\n        Axios.post(\"http://localhost:5000/posts/add\",data).then((res)=>{\n         \n            if(res.data.success){\n                alert(\"Added\");\n                this.setState({title:\"\", description:\"\", category:\"\"});\n            }\n        })\n        }\n    }\n    render() {\n        return (\n<div className=\"col-md-10 mt-3 mx-auto\">\n            <h1 className=\"h3 mb-3 font-weight-normal\">Create new post </h1>\n            <form className=\"needs-validation\" noValidate>\n            <div className=\"form-group\">\n                <label>Title</label>\n                <input type=\"text\" className=\"form-control\" name=\"title\" placeholder=\"Enter Title\"\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                />\n                {this.state.errors.title && (\n                <div className=\"text-danger\">{this.state.errors.title}</div>\n                )}\n                \n                \n                    <div className=\"form-group\">\n                <label>Category</label>\n                <input type=\"text\" className=\"form-control\" name=\"category\" placeholder=\"Enter Category\"\n                value={this.state.category}\n                onChange={this.handleInputChange}\n                />\n                {this.state.errors.category && (\n                <div className=\"text-danger\">{this.state.errors.category}</div>\n                )}\n                </div>\n\n                <div className=\"form-group\">\n                <label>Description</label>\n                </div>\n                <CKEditor\n                    editor={ ClassicEditor }\n                    data={this.state.description}\n                    onInit={ editor => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                    onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        this.setState({description: data});\n                    } }\n                \n                />\n                {this.state.errors.description && (\n                <div className=\"text-danger\">{this.state.errors.description}</div>\n                )}\n                </div>\n\n\n                \n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onSubmit}>\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp;Submit\n                    </button>\n            </form>\n            \n            \n            \n        </div>\n        \n                );\n    }\n}\nexport default CreatePost;","import React, { Component } from 'react'\nimport axios from 'axios';\n\nexport default class DetailPage extends Component {\nconstructor(props){\n    super(props)\n    this.state={\n        post:{},\n    };\n}\n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        axios.get(`http://localhost:5000/posts/detail/${id}`).then((res)=>{\n            if(res.data.success){\n                this.setState({\n                    post: res.data.post\n                });\n                console.log(\"post:\", this.state.post);\n            }\n        })\n    }\n    render() {\n        const {title, postCategory, description }= this.state.post;\n        return (\n            <div>\n                <h2>{title}</h2>\n                <dl className=\"row\">\n                    <dt className=\"col-sm-2\">Category</dt>\n                    <dd className=\"col-sm-10\">{postCategory}</dd>\n\n                    <dt className=\"col-sm-2\">Description</dt>\n                    <dd className=\"col-sm-10\">\n                    <p dangerouslySetInnerHTML= {{__html: description}}></p>\n                    </dd>\n\n                </dl>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { setErrors } from './setErrors';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nclass EditPost extends Component {\n    constructor(props){\n        super(props);\n            this.state = {\n            title: \"\",\n            description: \"\",\n            category: \"\",\n            errors:{}\n        };\n        \n    }\ncomponentDidMount(){\n    const id = this.props.match.params.id;\n\n    Axios.get(`http://localhost:5000/posts/detail/${id}`).then((res)=>{\n        if(res.data.success){\n            this.setState({\n                title: res.data.post.title,\n                description: res.data.post.description,\n                category : res.data.post.postCategory,\n            });\n\n        }\n    })\n}\n\n    handleInputChange=(e)=>{\n        const {name, value}= e.target;\n        this.setState({\n            ...this.state,\n            [name]:value,\n        });\n    };\n    validate=(title,description, category)=>{\n        const errors = setErrors(title,description, category);\n        this.setState({errors:errors});\n        return Object.values(errors).every((err)=>err === \"\");\n    }\n    onSubmit=(e)=>{\n        e.preventDefault();\n        const id = this.props.match.params.id;\n        const {title, description, category} = this.state;\n        if(this.validate(title, description, category)){\n\n        const data = {\n            title:title,\n            description:description,\n            postCategory:category,\n        }\n        console.log(data);\n        Axios.put(`http://localhost:5000/posts/update/${id}`,data).then((res)=>{\n            if(res.data.success){\n                alert(\"Edited Successfully\");\n            }\n        })\n        }\n    }\n    render() {\n        return (\n<div className=\"col-md-10 mt-3 mx-auto\">\n            <h1 className=\"h3 mb-3 font-weight-normal\">Edit post </h1>\n            <form className=\"needs-validation\" noValidate>\n            <div className=\"form-group\">\n                <label>Title</label>\n                <input type=\"text\" className=\"form-control\" name=\"title\" placeholder=\"Enter Title\"\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                />\n                {this.state.errors.title && (\n                <div className=\"text-danger\">{this.state.errors.title}</div>\n                )}\n                \n                \n                    <div className=\"form-group\">\n                <label>Category</label>\n                <input type=\"text\" className=\"form-control\" name=\"category\" placeholder=\"Enter Category\"\n                value={this.state.category}\n                onChange={this.handleInputChange}\n                />\n                {this.state.errors.category && (\n                <div className=\"text-danger\">{this.state.errors.category}</div>\n                )}\n                </div>\n\n                <div className=\"form-group\">\n                <label>Description</label>\n                </div>\n                <CKEditor\n                    editor={ ClassicEditor }\n                    data={this.state.description}\n                    onInit={ editor => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                    onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        this.setState({description: data});\n                    } }\n                \n                />\n                {this.state.errors.description && (\n                <div className=\"text-danger\">{this.state.errors.description}</div>\n                )}\n                </div>\n\n\n                \n                    <button className=\"btn btn-success\" type=\"submit\" onClick={this.onSubmit}>\n                        <i className=\"far fa-check-square\"></i>\n                        &nbsp;Submit\n                    </button>\n            </form>\n            \n            \n            \n        </div>\n        \n                );\n    }\n}\nexport default EditPost;","import React, { Component } from 'react'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a className=\"navbar-brand\" href=\"#\">MERN Stack</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n      </li>\n    </ul>\n  </div>\n</nav>\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect, Component } from 'react';\nimport axios from \"axios\";\n\n\n\nexport default class LandingPage extends Component {\nconstructor(props){\n  super(props);\n  this.state={\n    posts:[]\n    \n    \n  }\n}\ncomponentDidMount(){\n  this.getPosts();\n}\ngetPosts(){\n  axios.get(\"http://localhost:5000/posts\").then(res=>{\n    \n  \n    if(res.data.success){\n      this.setState({\n        posts:res.data.posts,\n      });\n      console.log(this.state.posts);\n    }\n  });\n}\nfilterContent(posts, searchTerm){\n  const result = posts.filter((post)=> \n  post.title.toLowerCase().includes(searchTerm) ||\n   post.description.toLowerCase().includes(searchTerm) ||\n   post.postCategory.toLowerCase().includes(searchTerm));\n  this.setState({posts: result});\n}\n\nhandleTextSearch=(e)=>{\n  const searchTerm= e.currentTarget.value;\n  axios.get(\"http://localhost:5000/posts\").then(res=>{\n    if(res.data.success){\n      this.filterContent(res.data.posts, searchTerm)\n        \n    }\n  });\n\n}\nonDelete=(id)=>{\n  axios.delete(`http://localhost:5000/posts/delete/${id}`).then((res)=>{\n    alert(res.data.title+\" Deleted Successfully\");\n    this.getPosts();\n\n  })\n};\n\n  render() {\n    return <div>\n        <div className=\"row\">\n  <div className=\"col-lg-9 mt-2 mb-2\">\n    <h2>All Posts</h2>\n  </div>\n  <div className=\"col-lg-9 mt-2 mb-2\">\n    <input className=\"form-control\"\n    type=\"search\"\n    placeholder=\"Search\"\n    name=\"searchTerm\"\n    onChange={this.handleTextSearch}/>\n</div>\n</div>\n      <table className=\"table table-dark\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Sr.</th>\n      <th scope=\"col\">Company Name</th>\n      <th scope=\"col\">Description</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Action</th>\n\n    </tr>\n  </thead>\n  <tbody>\n  {this.state.posts.map((post, index)=>(\n    <tr>\n      <th scope=\"row\">{index+1}</th>\n  \n      <td>\n        <a href={`/posts/${post._id}`}> {post.title} </a></td>\n      <td dangerouslySetInnerHTML= {{__html:post.description}}></td>\n      <td>{post.postCategory}</td>\n      <td>\n\n        <a className= \"btn btn-warning\" href={`/edit/${post._id}`}>\n          <i className=\"fas fa-edit\"></i>&nbsp; Edit\n        </a> &nbsp;\n        <a className= \"btn btn-danger\" href=\"#\" onClick={()=>this.onDelete(post._id)}>\n          <i className=\"far fa-trash-alt\"></i>&nbsp;Delete\n        </a>\n      </td>\n      \n\n    </tr>\n      )\n      )}\n    </tbody>\n    </table>\n    <button className=\"btn btn-success\"><a href=\"/add\">Add New Post</a></button>\n      </div>\n    \n   \n    \n  }\n}\n\n","import React, { Component , useState} from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport CreatePost from './components/CreatePost';\nimport DetailPage from './components/DetailPage';\nimport EditPost from './components/EditPost';\nimport Header from './components/Header';\nimport LandingPage from './components/LandingPage';\n\n\nexport default class App extends Component {\n  \n  render() {\n    return (\n       <BrowserRouter>\n       <div className=\"container\">\n         <Header />\n         <Route path=\"/\"exact component={LandingPage}/>\n         <Route path=\"/posts/:id\" component={DetailPage}/>\n         <Route path=\"/add\" component={CreatePost}/>\n         <Route path=\"/edit/:id\" component={EditPost}/>\n\n       </div>\n       </BrowserRouter>\n    );\n  }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}